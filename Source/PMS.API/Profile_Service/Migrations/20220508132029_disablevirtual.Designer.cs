// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PMS.API;

#nullable disable

namespace PMS.API.Migrations
{
    [DbContext(typeof(ProfileContext))]
    [Migration("20220508132029_disablevirtual")]
    partial class disablevirtual
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("PMS.API.BreakDuration", b =>
                {
                    b.Property<int>("BreakDuration_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BreakDuration_Id"), 1L, 1);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Ending_Month")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Ending_Year")
                        .HasColumnType("datetime2");

                    b.Property<int>("PersonalDetailsId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Starting_Month")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Starting_Year")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("BreakDuration_Id");

                    b.HasIndex("PersonalDetailsId");

                    b.ToTable("breakDurations");
                });

            modelBuilder.Entity("PMS.API.Education", b =>
                {
                    b.Property<int>("Education_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Education_Id"), 1L, 1);

                    b.Property<string>("Course")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Degree")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Ending_Year")
                        .HasColumnType("datetime2");

                    b.Property<float>("Percentage")
                        .HasColumnType("real");

                    b.Property<int>("PersonalDetailsId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Starting_Year")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("Education_Id");

                    b.HasIndex("PersonalDetailsId");

                    b.ToTable("educations");
                });

            modelBuilder.Entity("PMS.API.Language", b =>
                {
                    b.Property<int>("Language_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Language_Id"), 1L, 1);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Language_Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PersonalDetailsId")
                        .HasColumnType("int");

                    b.Property<bool>("Read")
                        .HasColumnType("bit");

                    b.Property<bool>("Speak")
                        .HasColumnType("bit");

                    b.Property<string>("UpdatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Write")
                        .HasColumnType("bit");

                    b.HasKey("Language_Id");

                    b.HasIndex("PersonalDetailsId");

                    b.ToTable("languages");
                });

            modelBuilder.Entity("PMS.API.PersonalDetails", b =>
                {
                    b.Property<int>("PersonalDetailsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PersonalDetailsId"), 1L, 1);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateOfJoinig")
                        .HasColumnType("datetime2");

                    b.Property<string>("MailAdress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("MobileNo")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nationality")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Objective")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("PersonalDetailsId");

                    b.ToTable("personalDetails");
                });

            modelBuilder.Entity("PMS.API.Projects", b =>
                {
                    b.Property<string>("Project_Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("PersonalDetailsId")
                        .HasColumnType("int");

                    b.Property<string>("ProjectName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Project_Ending_Month")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Project_Ending_Year")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Project_Starting_Month")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Project_Starting_Year")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("project_Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Project_Id");

                    b.HasIndex("PersonalDetailsId");

                    b.ToTable("projects");
                });

            modelBuilder.Entity("PMS.API.Skills", b =>
                {
                    b.Property<int>("Skill_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Skill_Id"), 1L, 1);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Domain")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PersonalDetailsId")
                        .HasColumnType("int");

                    b.Property<string>("Technology")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("Skill_Id");

                    b.HasIndex("PersonalDetailsId");

                    b.ToTable("skills");
                });

            modelBuilder.Entity("PMS.API.SocialMedia", b =>
                {
                    b.Property<int>("SocialMedia_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SocialMedia_Id"), 1L, 1);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("PersonalDetailsId")
                        .HasColumnType("int");

                    b.Property<string>("SocialMedia_Link")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SocialMedia_Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("SocialMedia_Id");

                    b.ToTable("SocialMedias");
                });

            modelBuilder.Entity("PMS.API.BreakDuration", b =>
                {
                    b.HasOne("PMS.API.PersonalDetails", "personalDetails")
                        .WithMany()
                        .HasForeignKey("PersonalDetailsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("personalDetails");
                });

            modelBuilder.Entity("PMS.API.Education", b =>
                {
                    b.HasOne("PMS.API.PersonalDetails", "personalDetails")
                        .WithMany()
                        .HasForeignKey("PersonalDetailsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("personalDetails");
                });

            modelBuilder.Entity("PMS.API.Language", b =>
                {
                    b.HasOne("PMS.API.PersonalDetails", "personalDetails")
                        .WithMany()
                        .HasForeignKey("PersonalDetailsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("personalDetails");
                });

            modelBuilder.Entity("PMS.API.Projects", b =>
                {
                    b.HasOne("PMS.API.PersonalDetails", "personalDetails")
                        .WithMany()
                        .HasForeignKey("PersonalDetailsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("personalDetails");
                });

            modelBuilder.Entity("PMS.API.Skills", b =>
                {
                    b.HasOne("PMS.API.PersonalDetails", "personalDetails")
                        .WithMany()
                        .HasForeignKey("PersonalDetailsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("personalDetails");
                });
#pragma warning restore 612, 618
        }
    }
}
